# nombre
name: Testing
#on: [push]
# se hara push cuando haya algun cambio en los siguientes directorios
on:
  push:
    paths:
      # - "./../../../platzi/api/**"
      - "./platzi/api/**"
      - ".github/workflows/api-ci.yml"
# por default nuestro directorio de trabajo sera el folder api
defaults:
  run:
    working-directory: ./platzi/api
# lo que va a hacer github actions
jobs:
  linter:
    # preparamos una maquina virtual con la ult version de ubuntu
    runs-on: ubuntu-latest
    # los pasos que tiene que seguir github actions
    steps:
      # clonar nuestro repositorio
      - name: Checkout
        uses: actions/checkout@v2
      # instalar node con la version especificada
      - name: Setup Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 18
          # cache: 'npm'
          # cache-dependency-path: ./platzi/api/package-lock.json
      # instalar las dependencias en un CI, entorno de integracion continua
      - name: install
        shell: bash
        run: npm ci
      # correr las pruebas estaticas
      - name: run linter
        shell: bash
        run: npm run lint

  unit-test:
    # preparamos una maquina virtual con la ult version de ubuntu
    runs-on: ubuntu-latest
    # los pasos que tiene que seguir github actions
    steps:
      # clonar nuestro repositorio
      - name: Checkout
        uses: actions/checkout@v2
      # instalar node con la version especificada
      - name: Setup Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 18
          # cache: 'npm'
          # cache-dependency-path: ./platzi/api/package-lock.json
      # instalar las dependencias en un CI, entorno de integracion continua
      - name: install
        shell: bash
        run: npm ci
      # correr las pruebas unitarias
      - name: run unit test
        shell: bash
        run: npm run test

  e2e:
    runs-on: ubuntu-latest
    container:
      image: node:18

    services:
      mongo-e2e:
        image: mongo:4.4
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: test123

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: install
        shell: bash
        run: npm ci
      - name: run e2e
        shell: bash
        run: npm run test:e2e
        env:
          MONGO_DB_NAME: demo
          MONGO_URL: mongodb://test:test123@mongo-e2e:27017?retryWrites=true&writeConcern=majority

